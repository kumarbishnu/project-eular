from resources.factors import get_prime_factors_count

question = '''
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''

target = 500


def solution():

    i = 3
    dn = 2
    count = 0

    while count <= target:
        i += 1

        i1 = i
        if i1 % 2 == 0:
            i1 = i1 // 2

        dn1 = 1
        for count in get_prime_factors_count(i1).values():
            dn1 *= (count + 1)

        count = dn * dn1
        dn = dn1

    print(i * (i - 1) // 2)
